/*
 * This file was generated by the Gradle 'init' task.
 */

buildscript {
    ext {
        lombokVersion = '1.18.18'
        spockVersion = '1.3-groovy-2.5'
        springBootVersion = '2.4.2'
        springDependencyManagementVersion = '1.0.11.RELEASE'
        springFoxStarterVersion = '3.0.0'
        springFoxUiVersion = '3.0.0'
    }
}

plugins {
    id 'checkstyle'
    id 'groovy'
    id 'jacoco'
    id 'java'
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "io.springfox:springfox-boot-starter:${springFoxStarterVersion}"
    implementation "io.springfox:springfox-swagger-ui:${springFoxUiVersion}"
    implementation 'commons-codec:commons-codec:1.15'



    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.spockframework:spock-core:${spockVersion}"
    testImplementation "org.spockframework:spock-spring:${spockVersion}"

}

checkstyle {
    showViolations = true
    ignoreFailures = false
    maxWarnings = 0
    maxErrors = 0
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestCoverageVerification {
    dependsOn test
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.85
            }
        }
    }
}

jacocoTestReport {
    dependsOn test
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
        vendor = JvmVendorSpec.ADOPTOPENJDK
    }
}

test {
    finalizedBy jacocoTestReport
}

check {
    finalizedBy jacocoTestCoverageVerification
}
